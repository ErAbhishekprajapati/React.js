import React, { useState } from "react";
import "bootstrap/dist/css/bootstrap.min.css";
import "./Simplef.css";

const App = () => {
  const [activeTab, setActiveTab] = useState("basic-info");

  // Store data for different forms
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    phone: "",
    address: "",
    company: "",
    position: "",
    experience: "",
    school: "",
    educationPosition: "",
    years: "",
    achievementTitle: "",
    achievementDescription: "",
    achievementYear: "",
    projectTitle: "",
    projectDescription: "",
    projectYear: "",
    summary: "",
    additionalInfoTitle: "",
    additionalInfo: "",
  });

  // Handle tab switching
  const handleTabClick = (tabId) => {
    setActiveTab(tabId);
  };

  // Handle form data change
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  // Handle form submit
  const handleSubmit = (e, tab) => {
    e.preventDefault();
    console.log(`${tab} submitted:`, formData);
  };

  // Render the form based on the active tab
  const renderForm = (tab) => {
    switch (tab) {
      case "basic-info":
        return (
          <form onSubmit={(e) => handleSubmit(e, "Basic Info")}>
            <div className="mb-3">
              <label className="form-label">Full Name</label>
              <input
                type="text"
                className="form-control"
                name="name"
                value={formData.name}
                onChange={handleChange}
                placeholder="Enter your full name"
                required
              />
            </div>
            <div className="mb-3">
              <label className="form-label">Email</label>
              <input
                type="email"
                className="form-control"
                name="email"
                value={formData.email}
                onChange={handleChange}
                placeholder="Enter your email"
                required
              />
            </div>
            <div className="mb-3">
              <label className="form-label">Phone Number</label>
              <input
                type="text"
                className="form-control"
                name="phone"
                value={formData.phone}
                onChange={handleChange}
                placeholder="Enter your phone number"
                required
              />
            </div>
            <div className="mb-3">
              <label className="form-label">Address</label>
              <input
                type="text"
                className="form-control"
                name="address"
                value={formData.address}
                onChange={handleChange}
                placeholder="Enter your address"
                required
              />
            </div>
            <button type="submit" className="btn btn-primary">
              Submit
            </button>
          </form>
        );

      case "work-experience":
        return (
          <form onSubmit={(e) => handleSubmit(e, "Work Experience")}>
            <div className="mb-3">
              <label className="form-label">Company Name</label>
              <input
                type="text"
                className="form-control"
                name="company"
                value={formData.company}
                onChange={handleChange}
                placeholder="Enter company name"
                required
              />
            </div>
            <div className="mb-3">
              <label className="form-label">Position</label>
              <input
                type="text"
                className="form-control"
                name="position"
                value={formData.position}
                onChange={handleChange}
                placeholder="Enter your position"
                required
              />
            </div>
            <div className="mb-3">
              <label className="form-label">Years of Experience</label>
              <input
                type="text"
                className="form-control"
                name="experience"
                value={formData.experience}
                onChange={handleChange}
                placeholder="Enter number of years"
                required
              />
            </div>
            <button type="submit" className="btn btn-primary">
              Submit
            </button>
          </form>
        );

      case "projects":
        return (
          <form onSubmit={(e) => handleSubmit(e, "Projects")}>
            <div className="mb-3">
              <label className="form-label">Project Title</label>
              <input
                type="text"
                className="form-control"
                name="projectTitle"
                value={formData.projectTitle}
                onChange={handleChange}
                placeholder="Enter project title"
                required
              />
            </div>
            <div className="mb-3">
              <label className="form-label">Project Description</label>
              <textarea
                className="form-control"
                name="projectDescription"
                value={formData.projectDescription}
                onChange={handleChange}
                placeholder="Enter project description"
                required
              />
            </div>
            <div className="mb-3">
              <label className="form-label">Project Year</label>
              <input
                type="text"
                className="form-control"
                name="projectYear"
                value={formData.projectYear}
                onChange={handleChange}
                placeholder="Enter project year"
                required
              />
            </div>
            <button type="submit" className="btn btn-primary">
              Submit
            </button>
          </form>
        );

      case "achievements":
        return (
          <form onSubmit={(e) => handleSubmit(e, "Achievements")}>
            <div className="mb-3">
              <label className="form-label">Achievement Title</label>
              <input
                type="text"
                className="form-control"
                name="achievementTitle"
                value={formData.achievementTitle}
                onChange={handleChange}
                placeholder="Enter achievement title"
                required
              />
            </div>
            <div className="mb-3">
              <label className="form-label">Achievement Description</label>
              <textarea
                className="form-control"
                name="achievementDescription"
                value={formData.achievementDescription}
                onChange={handleChange}
                placeholder="Enter achievement description"
                required
              />
            </div>
            <div className="mb-3">
              <label className="form-label">Achievement Year</label>
              <input
                type="text"
                className="form-control"
                name="achievementYear"
                value={formData.achievementYear}
                onChange={handleChange}
                placeholder="Enter achievement year"
                required
              />
            </div>
            <button type="submit" className="btn btn-primary">
              Submit
            </button>
          </form>
        );

      case "summary":
        return (
          <form onSubmit={(e) => handleSubmit(e, "Summary")}>
            <div className="mb-3">
              <label className="form-label">Summary</label>
              <textarea
                className="form-control"
                name="summary"
                value={formData.summary}
                onChange={handleChange}
                placeholder="Enter a short summary about yourself"
                required
              />
            </div>
            <button type="submit" className="btn btn-primary">
              Submit
            </button>
          </form>
        );

      case "other":
        return (
          <form onSubmit={(e) => handleSubmit(e, "Other Information")}>
            <div className="mb-3">
              <label className="form-label">Additional Info Title</label>
              <input
                type="text"
                className="form-control"
                name="additionalInfoTitle"
                value={formData.additionalInfoTitle}
                onChange={handleChange}
                placeholder="Enter additional info title"
                required
              />
            </div>
            <div className="mb-3">
              <label className="form-label">Additional Info</label>
              <textarea
                className="form-control"
                name="additionalInfo"
                value={formData.additionalInfo}
                onChange={handleChange}
                placeholder="Enter additional information"
                required
              />
            </div>
            <button type="submit" className="btn btn-primary">
              Submit
            </button>
          </form>
        );
        case "education":
          return (
            <form onSubmit={(e) => handleSubmit(e, "Education")}>
              <div className="mb-3">
                <label className="form-label">School Name</label>
                <input
                  type="text"
                  className="form-control"
                  name="school"
                  value={formData.school}
                  onChange={handleChange}
                  placeholder="Enter school name"
                  required
                />
              </div>
              <div className="mb-3">
                <label className="form-label">Position/Qualification</label>
                <input
                  type="text"
                  className="form-control"
                  name="educationPosition"
                  value={formData.educationPosition}
                  onChange={handleChange}
                  placeholder="Enter your position or qualification"
                  required
                />
              </div>
              <div className="mb-3">
                <label className="form-label">Years of Graduation</label>
                <input
                  type="text"
                  className="form-control"
                  name="years"
                  value={formData.years}
                  onChange={handleChange}
                  placeholder="Enter graduation year"
                  required
                />
              </div>
              <button type="submit" className="btn btn-primary">
                Submit
              </button>
            </form>
          );
        
      default:
        return <div>No content available</div>;
    }
  };

  // Function to handle print
  const handlePrint = () => {
    const printContent = document.getElementById("printContent").innerHTML;
    const printWindow = window.open("", "", "height=500,width=800");
    printWindow.document.write("<html><head><title>Print Form Data</title></head><body>");
    printWindow.document.write(printContent);
    printWindow.document.write("</body></html>");
    printWindow.document.close();
    printWindow.print();
  };

  return (
    <div>
      {/* Hero Section */}
      <section className="hero-section text-white py-5" style={{ backgroundColor: '#7E67AC' }}>
        <div className="container">
          <div className="row align-items-center">
            <div className="col-md-6">
              <h1 className="fw-bold">
                CREATE <span style={{ color: '#F6FF00' }}>OUR</span> RESUME
              </h1>
              <a href="/" className="btn btn-light mt-3 fw-bold">CREATE NOW</a>
            </div>
            <div className="col-md-6 text-center">
              <img
                className="img-style1"
                src="/images/laptop.JPG" // Ensure this path is correct in your public folder
                alt="Person with laptop"
              />
            </div>
          </div>
        </div>
        <p className="text-center mt-4">
          CREATE YOUR PROFESSIONAL RESUME NOW AND LAND YOUR DREAM JOB!
        </p>
      </section>

      {/* Tabbed Content */}
      <div className="p-4">
        <div className="container">
          {/* Tabs */}
          <ul className="nav nav-tabs">
            {["basic-info", "work-experience", "projects", "education", "achievements", "summary", "other"].map((tab) => (
              <li className="nav-item" key={tab}>
                <a
                  className={`nav-link ${activeTab === tab ? "active" : ""}`}
                  onClick={() => handleTabClick(tab)}
                  href="#!"
                >
                  {tab.replace("-", " ").toUpperCase()}
                </a>
              </li>
            ))}
          </ul>

          {/* Tab Content */}
          <div className="tab-content mt-3">
            <div className="tab-pane fade show active">
              {renderForm(activeTab)}
            </div>
          </div>
        </div>
      </div>

    {/* Display Data for Printing */}
<div id="printContent" className="mt-5">
  <div className="resume-container">
    <h3 className="text-center mb-4">Resume</h3>

    <div className="personal-info">
      <h4>{formData.name}</h4>
      <p><strong>Email:</strong> {formData.email}</p>
      <p><strong>Phone:</strong> {formData.phone}</p>
      <p><strong>Address:</strong> {formData.address}</p>
    </div>

    <hr />

    <div className="work-experience">
      <h5>Work Experience</h5>
      <p><strong>Company:</strong> {formData.company}</p>
      <p><strong>Position:</strong> {formData.position}</p>
      <p><strong>Experience:</strong> {formData.experience} years</p>
    </div>

    <hr />

    <div className="education">
      <h5>Education</h5>
      <p><strong>School:</strong> {formData.school}</p>
      <p><strong>Qualification/Position:</strong> {formData.educationPosition}</p>
      <p><strong>Graduation Year:</strong> {formData.years}</p>
    </div>

    <hr />

    <div className="achievements">
      <h5>Achievements</h5>
      <p><strong>Title:</strong> {formData.achievementTitle}</p>
      <p><strong>Description:</strong> {formData.achievementDescription}</p>
      <p><strong>Year:</strong> {formData.achievementYear}</p>
    </div>

    <hr />

    {/* Summary Section */}
    <div className="summary">
      <h5>Summary</h5>
      <p>{formData.summary}</p>
    </div>

    <hr />

    {/* You can add more sections here for Projects, Skills, etc. */}
  </div>
</div>



      {/* Print Button */}
      <div className="text-center mt-4">
        <button className="btn btn-success" onClick={handlePrint}>Print Our Resume</button>
      </div>
    </div>
  );
};

export default App;
